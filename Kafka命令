1.添加topic:

 kafka-topics.sh --create --topic example --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1
 
 2.查看topic:

kafka-topics.sh --zookeeper zookeeper:2181 --list
kafka-topics.sh --zookeeper 172.172.100.1:2181 --list
 
3.删除topic:
 kafka-topics.sh --zookeeper zookeeper:2181 --delete --topic example
 
 4.获取topic详情:
 kafka-topics.sh --zookeeper zookeeper:2181 --describe --topic example
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1.查看topic列表:
kafka-topics.sh --list --bootstrap-server hadoop102:9092

2.创建topic:
kafka-topics.sh --create --bootstrap-server hadoop102:9092 --topic first

kafka-topics.sh --create --bootstrap-server hadoop102:9092 --topic second --partitions 2  --replication-factor 3

3.查看topic详情:
kafka-topics.sh --describe --bootstrap-server hadoop102:9092 --topic first

4.修改Topic的分区数(只能改大)
kafka-topics.sh --describe--bootstrap-server hadoop102:9092 --topic first

5.删除topic
kafka-topics.sh --delete --bootstrap-server hadoop102:9092 --topic first

6.生产者
kafka-console-producer.sh --broker-list hadoop102:9092 --topic first

7.消费者
kafka-console-consumer.sh --bootstrap-server hadoop102:9092 --topic first

kafka-console-consumer.sh --bootstrap-server hadoop102:9092 --topic first --from-beginning

8.消费者组:
kafka-console-consumer.sh --bootstrap-server hadoop102:9092 --topic first --group aa

--------------------------------------------------------------------------------------------------------------
docker 中的kafka 查看数据:

1.进入docker 容器中:
docker exec -it <Kafka容器名称或ID> bash
2.进入kafka bin 目录
cd usr/bin
3.使用命令查看消息(确保topic正确):
/opt/kafka/bin
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic  default_send_msg  --from-beginning | grep 'HJGJ16879485579925066056'

4.将kafka某个组的某个topic消息偏移量改为最新：
1) 先 dry-run（仅显示将要改成的结果，不会修改）
./kafka-consumer-groups.sh --bootstrap-server localhost:9092 \
  --group rsng-topo-edit \
  --topic DELETE_VM_EVENT \
  --reset-offsets --to-latest --dry-run
2) 确认无误后真正执行（把该 consumer group 的该 topic 偏移量设为 latest）
./kafka-consumer-groups.sh --bootstrap-server localhost:9092 \
  --group rsng-topo-edit \
  --topic DELETE_VM_EVENT \
  --reset-offsets --to-latest --execute
3）执行这个命令来查看直接完后的结果
kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group rsng-topo-edit | grep DELETE_VM_EVENT
 
 
 
 
